stages:
  - pre-build
  - build
  - test
  - deploy

# Etapa de análisis estático
pre-build:
  stage: pre-build
  script:
    - echo "Instalando dependencias para análisis estático..."
    - pip install -r backend/requirements.txt
    - flake8 backend || true
    - pylint backend/app.py || true
    - cd frontend && npm install
    - npm audit || true
  artifacts:
    paths:
      - node_modules/

# Etapa de compilación
build:
  stage: build
  script:
    - echo "Compilando frontend y preparando backend..."
    - cd frontend && npm run build
    - echo "Frontend compilado"
    - mkdir -p dist
    - cp -r frontend/build/* dist/
  artifacts:
    paths:
      - dist/

# Etapa de pruebas
test:
  stage: test
  script:
    - echo "Ejecutando pruebas..."
    - pytest backend || true
    - cd frontend && npm test || true

# Etapa de despliegue
deploy:
  stage: deploy
  script:
    - echo "Construyendo imagen Docker..."
    - docker build -t my-app:latest .
    - echo "Ejecutando aplicación en Docker..."
    - docker run -d -p 5000:5000 my-app
